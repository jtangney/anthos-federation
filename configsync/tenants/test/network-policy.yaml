kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata: # kpt-merge: ns/default-deny-all
  name: default-deny-all
  namespace: test # kpt-set: ${tenant-name}
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata: # kpt-merge: allow-within-own-namespace
  name: allow-within-own-namespace
  namespace: test # kpt-set: ${tenant-name}
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: test # kpt-set: ${tenant-name}
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: test # kpt-set: ${tenant-name}
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata: # kpt-merge: ns/allow-egress-metadata-server
  name: allow-egress-metadata-server
  namespace: test # kpt-set: ${tenant-name}
spec:
  podSelector: {}
  policyTypes:
  - Egress
  egress:
  - to:
    - ipBlock: 
        cidr: 169.254.169.252/32
    - ipBlock: 
        cidr: 127.0.0.1/32
    ports:
    - protocol: TCP
      port: 988
  - to:
    - ipBlock: # For GKE data plane v2
        cidr: 169.254.169.254/32
    ports:
    - protocol: TCP
      port: 80
# ---
# kind: NetworkPolicy
# apiVersion: networking.k8s.io/v1
# metadata: # kpt-merge: ns/allow-egress-metadata-server
#   name: allow-egress-metadata-server-v2
#   namespace: test # kpt-set: ${tenant-name}
# spec:
#   podSelector: {}
#   policyTypes:
#   - Egress
#   egress:
#   - to:
#     - ipBlock: # For GKE data plane v2
#         cidr: 169.254.169.254/32
#     ports:
#     - protocol: TCP
#       port: 80
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata: # kpt-merge: ns/allow-egress-istio-system
  name: allow-egress-istio-system
  namespace: test # kpt-set: ${tenant-name}
spec:
  podSelector: {}
  policyTypes:
  - Egress
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: istio-system
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata: # kpt-merge: ns/allow-egress-kube-system-dns
  name: allow-egress-kube-system-dns
  namespace: test # kpt-set: ${tenant-name}
spec:
  podSelector: {}
  policyTypes:
  - Egress
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kube-system
    ports:
    - port: 53
      protocol: UDP
    - port: 53
      protocol: TCP
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata: # kpt-merge: ns/allow-egress-to-private-google-apis
  name: allow-egress-to-private-google-apis
  namespace: test # kpt-set: ${tenant-name}
spec:
  podSelector: {}
  policyTypes:
    - Egress
  egress:
    - to:
        - ipBlock:
            cidr: 199.36.153.8/30
---
# TESTING only! Remove this policy for prod.
# Allow ingress from pods labelled 'app: test' in 'test' namespace
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata: # kpt-merge: fltenant1/testing-allow-ingress-from-test-app
  name: testing-allow-ingress-from-test-app
  namespace: test # kpt-set: ${tenant-name}
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: test
      namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: test
