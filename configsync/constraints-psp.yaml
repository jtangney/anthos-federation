# Adds selected PodSecurityPolicy constraints 
# https://cloud.google.com/anthos-config-management/docs/how-to/using-constraints-to-enforce-pod-security

# prevent privileged containers
# Note that you need to use the Istio cni-plugin (or else exclude istio-system namespace from the policy)
apiVersion: constraints.gatekeeper.sh/v1beta1
kind: K8sPSPPrivilegedContainer
metadata:
  name: psp-privileged-container
spec:
  match:
    kinds:
      - apiGroups: [""]
        kinds: ["Pod"]
    excludedNamespaces: ["kube-system"]

---
# prevent hostPath volumes
apiVersion: constraints.gatekeeper.sh/v1beta1
kind: K8sPSPHostFilesystem
metadata:
  name: psp-host-filesystem
spec:
  enforcementAction: dryrun
  match:
    kinds:
      - apiGroups: [""]
        kinds: ["Pod"]
    excludedNamespaces: ["kube-system"]
  parameters:
    allowedHostPaths: []

---
# prevent privilege escalation
# Applied in tenant namespaces only
apiVersion: constraints.gatekeeper.sh/v1beta1
kind: K8sPSPAllowPrivilegeEscalationContainer
metadata:
  name: psp-allow-privilege-escalation-container
spec:
  enforcementAction: dryrun
  match:
    kinds:
      - apiGroups: [""]
        kinds: ["Pod"]
    namespaceSelector:
      matchLabels:
          tenant-ns: "true"

---
# Require read only filesystem
# Applied in tenant namespaces only
apiVersion: constraints.gatekeeper.sh/v1beta1
kind: K8sPSPReadOnlyRootFilesystem
metadata:
  name: psp-readonlyrootfilesystem
spec:
  enforcementAction: dryrun
  match:
    kinds:
      - apiGroups: [""]
        kinds: ["Pod"]
    namespaceSelector:
      matchLabels:
          tenant-ns: "true"

---
# Prevent Services of type NodePort
apiVersion: constraints.gatekeeper.sh/v1beta1
kind: K8sBlockNodePort
metadata:
  name: block-node-port
spec:
  match:
    kinds:
      - apiGroups: [""]
        kinds: ["Service"]

---
# In tenant namespaces, only allow images to be pulled from
# a named set of repositories
apiVersion: constraints.gatekeeper.sh/v1beta1
kind: K8sAllowedRepos
metadata:
  name: repo-is-openpolicyagent
spec:
  match:
    kinds:
      - apiGroups: [""]
        kinds: ["Pod"]
    namespaceSelector:
      matchLabels:
          tenant-ns: "true"
  parameters:
    # In prod, make these more specific
    repos:
      - "gcr.io/"
      - "eu.gcr.io/"
      - "us-docker.pkg.dev/"
      - "eu-docker.pkg.dev/"
      